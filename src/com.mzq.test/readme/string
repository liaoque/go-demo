strings 包提供操作 UTF-8 字符串常用函数和结构体
a) 常用函数
⚫ Compare：比较字符串
⚫ Contains：是否包含子字符串
⚫ Count：子字符串出现次数
⚫ EqualFold：不区分大小写比较
⚫ Fields：按空白字符分割字符串
⚫ HasPrefix：是否以字符串作为前缀
⚫ HasSuffix：是否以字符串作为后缀
⚫ Index：获取子字符串首次出现的位置
⚫ Split：分割字符串为切片
⚫ SplitN：分割字符串为 N 个元素的切片，N<0 对整个字符串进行分割
⚫ Join：将字符串切片连接
⚫ LastIndex：获取子字符串最后一次出现的位置
⚫ Map：对字符串中每个字符调用转换函数生成新的字符串
⚫ Repeat：将字符串重复 N 次连接
⚫ Replace：替换前 N 个出现的字符串，N<0 替换全部
⚫ ReplaceAll：替换所有出现的字符串
⚫ Title：单词首字母大写
⚫ ToLower: 所有字符转为小写
⚫ ToUpper：所有字符转为大写
⚫ Trim：去除字符串前后字符
⚫ TrimSpace:去除字符串前后空格
⚫ TrimLeft：去除字符串前字符
⚫ TrimRight: 去除字符串后字符
⚫ TrimPrefix：去除字符串前缀字符串
⚫ TrimSuffix：去除字符串后缀字符串



b) 常用结构体
⚫ Builder
字符串是基本值类型，不可修改。Go 语言提供 Builder 结构体可以高效的实现符串
的拼接，实现了 io.Writer 接口，可以当作流来写入
常用方法：
➢ Write:将字节切片写入到 builder 对象
➢ WriteByte:将字节切片写入到 builder 对象
➢ WriteRune:将 rune 写入到 builder 对象
➢ WriteString:将字符串写入到 builder 对象
➢ String:将 builder 转化为 string
➢ Reset:清空内容



Reader
Go 语言提供 Reader 结构体，可以将字符串转化为 Reader 对象，当作流来读取
常用函数：
➢ NewReader:根据字符串创建 reader 对象指针
常用方法
➢ Read：读取字符串并写入到参数切片
➢ WriteTo：将 reader 对象中字符串写入到输出流中
➢ Reset：更新 reader 对象字符串内容
➢ Seek：设置 reader 对象处理位置